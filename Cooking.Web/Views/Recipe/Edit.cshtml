@model Cooking.Models.ViewModels.Site.NewRecipeVM

@using (Html.BeginForm("Edit", "Recipe", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h4>Edit main content of recipe </h4>
    <hr />
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-3">
            @if (!string.IsNullOrEmpty(Model.ProfilImgGUID))
            {
                <p>Picture</p>
                <span class="pull-right">
                    <a href="/Recipe/@Model.Id/RemoveImg" class="" role="button">Remove</a>
                </span>
                <div class="thumbnail">
                    <img class="card-img-top" src="~/Images/Recipe/@Model.Dir/@Model.ProfilImgGUID" alt="Card image cap">
                </div>
            }
            else
            {
                <div class="form-group">
                    <input type="file" name="fileUpload" class="file" style="display: none;">
                    @Html.LabelFor(model => model.ProfilImgGUID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        <div class="input-group">
                            <input type="text" class="form-control input" disabled placeholder="Upload Image">
                            <span class="input-group-btn">
                                <button class="browse btn btn-primary input" type="button"><i class="glyphicon glyphicon-search"></i> Browse</button>
                            </span>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-sm-6">

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "5" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.SelectedTypesId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.SelectedTypesId, Model.RecTypes, htmlAttributes: new { @class = "btn btn-secondary dropdown-toggle" })
                        @Html.ValidationMessageFor(m => m.SelectedTypesId)
                    </div>
                </div>
                <div class="form-group">
                    <span class="pull-left">
                        <a href="#" class="btn btn-primary" role="button">Cancel</a>
                    </span>
                    <span class="pull-right">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </span>
                </div>
            </div>
        </div>
    </div>
}

